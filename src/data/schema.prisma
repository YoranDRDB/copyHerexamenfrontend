// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}
model User {
  @@map("users")
  id           Int             @id @default(autoincrement()) @db.UnsignedInt
  username     String          @db.VarChar(255)
  email        String          @unique(map: "idx_user_email_unique") @db.VarChar(255)
  passwordHash String          @map("passwordhash")@db.VarChar(255)
  role         String          @db.VarChar(255)
  projects     Project[]
  taskAssignees TaskAssignee[]
  @@index([email], map: "idx_user_email")
}

model Project {
  @@map("projects")
  id          Int       @id @default(autoincrement()) @db.UnsignedInt
  owner_id    Int       @db.UnsignedInt
  name        String    @db.VarChar(255)
  description String?   @db.VarChar(255)
  owner       User      @relation(fields: [owner_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  tasks       Task[]

  @@index([owner_id], map: "fk_project_owner")
}

model Task {
  @@map("tasks")
  id          Int       @id @default(autoincrement()) @db.UnsignedInt
  project_id  Int       @db.UnsignedInt
  title       String    @db.VarChar(255)
  description String?   @db.VarChar(255)
  status      String    @db.VarChar(50)
  priority    String    @db.VarChar(50)
  due_date    DateTime?
  project     Project   @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  assignees   TaskAssignee[]
  tags        TaskTag[]

  @@index([project_id], map: "fk_task_project")
}

model Tag {
  @@map("tags")
  id    Int      @id @default(autoincrement()) @db.UnsignedInt
  name  String   @db.VarChar(255)
  tasks TaskTag[]

  @@index([name], map: "idx_tag_name")
}

model TaskAssignee {
  @@map("task_assignees")
  task_id Int @db.UnsignedInt
  user_id Int @db.UnsignedInt
  task    Task @relation(fields: [task_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user    User @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([task_id, user_id])
  @@index([user_id], map: "fk_taskassignee_user")
  @@index([task_id], map: "fk_taskassignee_task")
}

model TaskTag {
  @@map("task_tags")
  task_id Int @db.UnsignedInt
  tag_id  Int @db.UnsignedInt
  task    Task @relation(fields: [task_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  tag     Tag  @relation(fields: [tag_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([task_id, tag_id])
  @@index([tag_id], map: "fk_tasktag_tag")
  @@index([task_id], map: "fk_tasktag_task")
}
